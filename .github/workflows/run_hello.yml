---
name: Run Ansible Role Tests with Minikube

on:
  workflow_dispatch:  
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Ansible Tests with Minikube
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Add Helm Repository
      - name: Add Helm Signing Key
        run: |
          curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null

      - name: Install apt-transport-https
        run: sudo apt-get install apt-transport-https --yes

      - name: Add Helm Repository
        run: |
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list

      - name: Update apt-get
        run: sudo apt-get update

      # Set up Python and Install Dependencies
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Running MAKEFILE
        run: |
          make build

      - name: Install Ansible and Dependencies and requirements.txt
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Install Minikube and Kubernetes CLI
      - name: Install Minikube and Kubectl
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install kubectl /usr/local/bin/kubectl

      # Start Minikube
      - name: Start Minikube
        run: |
          mkdir $HOME/.kube && touch $HOME/.kube/config && chmod 600 $HOME/.kube/config
          export CHANGE_MINIKUBE_NONE_USER=true
          minikube start --driver=docker
          minikube tunnel &

      # Install Ansible Collection
      - name: Install Collection from requirements.yml
        run: |
          ansible-galaxy collection install -r collections/requirements.yml

      # Run Tests
      - name: Run Hello World Test
        run: |
          export KUBECONFIG=~/.kube/config
          make hello

      # Archive Test Results
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test_results/
